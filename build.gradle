group 'com.mobisist.springbootseed'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.1.4'

    repositories {
        maven {
            url "http://artifactory.mobisist.com/artifactory/libs-all"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven {
        url "http://artifactory.mobisist.com/artifactory/libs-all"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.springframework.boot:spring-boot-autoconfigure:1.5.6.RELEASE"

    compileOnly 'com.mobisist.components:messaging:0.2.0-SNAPSHOT'

    testCompile 'junit:junit:4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}


/* ***** common for local deploy and remote deploy ***** */

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


/* ***** local maven deploy ***** */

// can be utilized for:
//   $ gradle publishToMavenLocal
// which is helpful when local testing
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
        }
    }
}


/* ***** remote maven deploy ***** */

artifacts {
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "${artifactoryUrl}/artifactory/libs-release-local") {
                authentication(userName: artifactoryUsername, password: artifactoryPassword)
            }
            snapshotRepository(url: "${artifactoryUrl}/artifactory/libs-snapshot-local") {
                authentication(userName: artifactoryUsername, password: artifactoryPassword)
            }
        }
    }
}